cat("✗ Larvae.csv not found. Please run create_larval_datasets.R first\n")
return(NULL)
}
larval_data <- read_csv("Larvae.csv", show_col_types = FALSE)
cat("✓ Loaded larval data:", nrow(larval_data), "records\n")
# Show temporal and spatial coverage
year_range <- range(larval_data$year, na.rm = TRUE)
cat("Temporal coverage:", year_range[1], "-", year_range[2], "\n")
species_count <- length(unique(larval_data$scientific_name))
cat("Species diversity:", species_count, "unique species\n")
return(larval_data)
}
# Function to load ROMS chlorophyll data
load_roms_chlorophyll <- function() {
cat("\nLoading ROMS chlorophyll data...\n")
# Check for existing ROMS chlorophyll file
roms_files <- c(
"calcofi_larval_chlorophyll_3d.csv",
"roms_chlorophyll_data.csv"
)
roms_file <- NULL
for (file in roms_files) {
if (file.exists(file)) {
roms_file <- file
break
}
}
if (is.null(roms_file)) {
cat("⚠️  No ROMS chlorophyll data found. Please run 03_roms_chlorophyll_access.R first\n")
return(NULL)
}
roms_data <- read_csv(roms_file, show_col_types = FALSE)
cat("✓ Loaded ROMS chlorophyll:", nrow(roms_data), "records\n")
return(roms_data)
}
# Function to load CTD chlorophyll data
load_ctd_chlorophyll <- function() {
cat("\nLoading CTD chlorophyll data...\n")
# Check for CTD chlorophyll file
ctd_file <- "calcofi_ctd_roms_chlorophyll_combined.csv"
if (!file.exists(ctd_file)) {
cat("⚠️  CTD chlorophyll data not found. Please run 05_extract_ctd_chlorophyll.R first\n")
return(NULL)
}
ctd_data <- read_csv(ctd_file, show_col_types = FALSE)
cat("✓ Loaded CTD chlorophyll:", nrow(ctd_data), "records\n")
return(ctd_data)
}
# Function to integrate larval data with chlorophyll
integrate_larval_chlorophyll <- function(larval_data, roms_data, ctd_data) {
cat("\n--- Integrating Larval Data with Chlorophyll ---\n")
if (is.null(larval_data)) {
cat("✗ No larval data available for integration\n")
return(NULL)
}
# Use existing CTD-ROMS combined data if available (already integrated)
if (!is.null(ctd_data) && nrow(ctd_data) > 0) {
cat("Using existing CTD-ROMS chlorophyll data...\n")
# The CTD data file already contains integrated larval-CTD-ROMS data
# Just need to create depth-based summaries
integrated_data <- ctd_data %>%
mutate(
# Create depth zone summaries from existing data
roms_chl_surface = ifelse(ctd_depth <= 10, roms_chlorophyll, NA),
roms_chl_subsurface = ifelse(ctd_depth > 10 & ctd_depth <= 50, roms_chlorophyll, NA),
roms_chl_deep = ifelse(ctd_depth > 50, roms_chlorophyll, NA),
roms_chl_mean = roms_chlorophyll,
ctd_chl_surface = ifelse(ctd_depth <= 10, ctd_chlorophyll, NA),
ctd_chl_subsurface = ifelse(ctd_depth > 10 & ctd_depth <= 50, ctd_chlorophyll, NA),
ctd_chl_deep = ifelse(ctd_depth > 50, ctd_chlorophyll, NA),
ctd_chl_mean = ctd_chlorophyll
)
cat("✓ Loaded integrated CTD-ROMS data:", nrow(integrated_data), "records\n")
return(integrated_data)
}
# Fallback: Start with larval data as base and try to add chlorophyll data
integrated_data <- larval_data
# Add ROMS chlorophyll if available
if (!is.null(roms_data) && nrow(roms_data) > 0) {
cat("Integrating ROMS chlorophyll data...\n")
# Match by location and time (with tolerance)
roms_summary <- roms_data %>%
mutate(
match_lat = round(latitude, 2),
match_lon = round(longitude, 2),
match_date = as.Date(time)
) %>%
group_by(match_lat, match_lon, match_date) %>%
summarise(
roms_chl_surface = mean(chlorophyll_mg_m3[depth_m <= 10], na.rm = TRUE),
roms_chl_subsurface = mean(chlorophyll_mg_m3[depth_m > 10 & depth_m <= 50], na.rm = TRUE),
roms_chl_deep = mean(chlorophyll_mg_m3[depth_m > 50], na.rm = TRUE),
roms_chl_mean = mean(chlorophyll_mg_m3, na.rm = TRUE),
.groups = "drop"
)
# Match with larval data
integrated_data <- integrated_data %>%
mutate(
match_lat = round(latitude, 2),
match_lon = round(longitude, 2),
match_date = date
) %>%
left_join(roms_summary, by = c("match_lat", "match_lon", "match_date")) %>%
select(-match_lat, -match_lon, -match_date)
roms_matches <- sum(!is.na(integrated_data$roms_chl_mean))
cat("✓ ROMS chlorophyll matched to", roms_matches, "larval records\n")
}
# Add missing columns with NA if no data was joined
if (!"roms_chl_surface" %in% names(integrated_data)) {
integrated_data$roms_chl_surface <- NA_real_
integrated_data$roms_chl_subsurface <- NA_real_
integrated_data$roms_chl_deep <- NA_real_
integrated_data$roms_chl_mean <- NA_real_
}
if (!"ctd_chl_surface" %in% names(integrated_data)) {
integrated_data$ctd_chl_surface <- NA_real_
integrated_data$ctd_chl_subsurface <- NA_real_
integrated_data$ctd_chl_deep <- NA_real_
integrated_data$ctd_chl_mean <- NA_real_
integrated_data$ctd_fluorescence_mean <- NA_real_
}
# Calculate chlorophyll differences and ratios
integrated_data <- integrated_data %>%
mutate(
# Chlorophyll differences (ROMS - CTD)
chl_diff_surface = roms_chl_surface - ctd_chl_surface,
chl_diff_subsurface = roms_chl_subsurface - ctd_chl_subsurface,
chl_diff_mean = roms_chl_mean - ctd_chl_mean,
# Chlorophyll ratios (ROMS / CTD)
chl_ratio_surface = ifelse(!is.na(ctd_chl_surface) & ctd_chl_surface > 0,
roms_chl_surface / ctd_chl_surface, NA),
chl_ratio_mean = ifelse(!is.na(ctd_chl_mean) & ctd_chl_mean > 0,
roms_chl_mean / ctd_chl_mean, NA),
# Data availability flags
has_roms_chl = !is.na(roms_chl_mean),
has_ctd_chl = !is.na(ctd_chl_mean),
has_both_chl = has_roms_chl & has_ctd_chl
)
cat("✓ Created integrated dataset:", nrow(integrated_data), "records\n")
return(integrated_data)
}
# Function to create summary statistics
create_integration_summary <- function(integrated_data) {
if (is.null(integrated_data) || nrow(integrated_data) == 0) {
return(NULL)
}
cat("\n--- Integration Summary ---\n")
# Data availability summary
availability_summary <- integrated_data %>%
summarise(
total_records = n(),
with_roms_chl = sum(has_roms_chl, na.rm = TRUE),
with_ctd_chl = sum(has_ctd_chl, na.rm = TRUE),
with_both_chl = sum(has_both_chl, na.rm = TRUE),
roms_coverage_pct = round(100 * with_roms_chl / total_records, 1),
ctd_coverage_pct = round(100 * with_ctd_chl / total_records, 1),
both_coverage_pct = round(100 * with_both_chl / total_records, 1)
)
cat("Data availability:\n")
cat("  Total larval records:", availability_summary$total_records, "\n")
cat("  With ROMS chlorophyll:", availability_summary$with_roms_chl,
"(", availability_summary$roms_coverage_pct, "% )\n")
cat("  With CTD chlorophyll:", availability_summary$with_ctd_chl,
"(", availability_summary$ctd_coverage_pct, "% )\n")
cat("  With both chlorophyll:", availability_summary$with_both_chl,
"(", availability_summary$both_coverage_pct, "% )\n")
# Chlorophyll statistics for records with both datasets
if (availability_summary$with_both_chl > 0) {
chl_stats <- integrated_data %>%
filter(has_both_chl) %>%
summarise(
roms_chl_mean = mean(roms_chl_mean, na.rm = TRUE),
ctd_chl_mean = mean(ctd_chl_mean, na.rm = TRUE),
chl_diff_mean = mean(chl_diff_mean, na.rm = TRUE),
chl_ratio_mean = mean(chl_ratio_mean, na.rm = TRUE),
correlation = cor(roms_chl_mean, ctd_chl_mean, use = "complete.obs")
)
cat("\nChlorophyll comparison (records with both ROMS and CTD):\n")
cat("  ROMS chlorophyll mean:", round(chl_stats$roms_chl_mean, 3), "mg/m³\n")
cat("  CTD chlorophyll mean:", round(chl_stats$ctd_chl_mean, 3), "mg/m³\n")
cat("  Mean difference (ROMS - CTD):", round(chl_stats$chl_diff_mean, 3), "mg/m³\n")
cat("  Mean ratio (ROMS / CTD):", round(chl_stats$chl_ratio_mean, 2), "\n")
cat("  Correlation:", round(chl_stats$correlation, 3), "\n")
}
# Species with best chlorophyll coverage
species_coverage <- integrated_data %>%
group_by(scientific_name) %>%
summarise(
total_records = n(),
with_chl = sum(has_roms_chl | has_ctd_chl, na.rm = TRUE),
coverage_pct = round(100 * with_chl / total_records, 1),
.groups = "drop"
) %>%
filter(total_records >= 100) %>%
arrange(desc(coverage_pct)) %>%
head(10)
cat("\nTop 10 species by chlorophyll data coverage (≥100 records):\n")
print(species_coverage)
return(integrated_data)
}
# Main execution function
main_integrate_larval_chlorophyll <- function() {
cat("Starting larval-chlorophyll integration...\n\n")
# Load datasets
larval_data <- load_larval_datasets()
roms_data <- load_roms_chlorophyll()
ctd_data <- load_ctd_chlorophyll()
if (is.null(larval_data)) {
cat("✗ Cannot proceed without larval data\n")
return(NULL)
}
# Integrate datasets
integrated_data <- integrate_larval_chlorophyll(larval_data, roms_data, ctd_data)
if (is.null(integrated_data)) {
cat("✗ Integration failed\n")
return(NULL)
}
# Create summary
final_data <- create_integration_summary(integrated_data)
# Save integrated dataset
cat("\n--- Saving Integrated Dataset ---\n")
output_file <- "calcofi_larval_chlorophyll_integrated.csv"
write_csv(integrated_data, output_file)
cat("✓ Saved:", output_file, "(", nrow(integrated_data), "records )\n")
# Save subset with complete chlorophyll data
complete_data <- integrated_data %>%
filter(has_both_chl)
if (nrow(complete_data) > 0) {
complete_file <- "calcofi_larval_chlorophyll_complete.csv"
write_csv(complete_data, complete_file)
cat("✓ Saved:", complete_file, "(", nrow(complete_data), "records with both ROMS and CTD chlorophyll )\n")
}
cat("\n🌊 Larval-chlorophyll integration completed!\n")
cat("Ready for 3D environmental analysis\n")
return(integrated_data)
}
# Execute
if (interactive() || !exists("skip_main_execution")) {
integrated_larval_data <- main_integrate_larval_chlorophyll()
}
library(dplyr)
library(readr)
library(lubridate)
cat("=== CTD Chlorophyll-a Extraction ===\n")
# Function to examine CTD bottle data structure
examine_ctd_data_structure <- function(bottle_file = "calcofi_bottles_recent.csv") {
cat("Examining CTD bottle data structure...\n")
# Read just the header to identify chlorophyll-related columns
tryCatch({
# Read first few rows to check structure
sample_data <- read_csv(bottle_file, n_max = 10, locale = locale(encoding = "latin1"))
cat("✓ Successfully read bottle data sample\n")
cat("Total columns:", ncol(sample_data), "\n")
# Find chlorophyll-related columns
chl_columns <- names(sample_data)[grepl("chlor|chl|fluor|phae", names(sample_data), ignore.case = TRUE)]
cat("Chlorophyll-related columns found:\n")
for (col in chl_columns) {
cat("•", col, "\n")
}
# Check for actual data in these columns
if (length(chl_columns) > 0) {
cat("\nSample values from chlorophyll columns:\n")
for (col in chl_columns) {
non_na_values <- sample_data[[col]][!is.na(sample_data[[col]])]
if (length(non_na_values) > 0) {
cat("", col, ":", paste(head(non_na_values, 3), collapse = ", "), "\n")
} else {
cat("", col, ": All NA in sample\n")
}
}
}
return(list(columns = chl_columns, sample_data = sample_data))
}, error = function(e) {
cat("✗ Error reading bottle data:", e$message, "\n")
return(NULL)
})
}
# Function to extract CTD chlorophyll data
extract_ctd_chlorophyll <- function(bottle_file = "calcofi_bottles_recent.csv") {
cat("\n--- Extracting CTD Chlorophyll Data ---\n")
# Read the full dataset with proper encoding
tryCatch({
ctd_data <- read_csv(bottle_file, locale = locale(encoding = "latin1"), show_col_types = FALSE)
cat("✓ Loaded", nrow(ctd_data), "CTD bottle records\n")
# Check for chlorophyll columns
chl_columns <- names(ctd_data)[grepl("chlor|chl|fluor|phae", names(ctd_data), ignore.case = TRUE)]
if (length(chl_columns) == 0) {
cat("⚠️  No chlorophyll columns found in CTD data\n")
return(NULL)
}
# Extract relevant columns for chlorophyll analysis
ctd_chl <- ctd_data %>%
select(
Sta_ID, Depthm, T_degC, Salnty,
any_of(c("ChlorA", "Chlqua", "Phaeop", "Phaqua")),
everything()
) %>%
filter(!is.na(Depthm)) %>%
# Parse station ID to get coordinates (if available)
mutate(
station_line = as.numeric(substr(Sta_ID, 1, 3)),
station_number = as.numeric(substr(Sta_ID, 6, 8))
)
# Check data availability
if ("ChlorA" %in% names(ctd_chl)) {
non_na_chl <- sum(!is.na(ctd_chl$ChlorA))
cat("ChlorA column found:", non_na_chl, "non-NA values out of", nrow(ctd_chl), "records\n")
if (non_na_chl > 0) {
chl_range <- range(ctd_chl$ChlorA, na.rm = TRUE)
cat("ChlorA range:", round(chl_range[1], 3), "to", round(chl_range[2], 3), "\n")
}
}
if ("Phaeop" %in% names(ctd_chl)) {
non_na_phae <- sum(!is.na(ctd_chl$Phaeop))
cat("Phaeop (phaeopigments) column found:", non_na_phae, "non-NA values\n")
}
return(ctd_chl)
}, error = function(e) {
cat("✗ Error extracting CTD chlorophyll:", e$message, "\n")
return(NULL)
})
}
# Function to match CTD data with larval sampling locations
match_ctd_with_larval_locations <- function(ctd_chl, larval_file = "Larvae.csv") {
cat("\n--- Matching CTD with Larval Locations ---\n")
if (is.null(ctd_chl)) {
cat("✗ No CTD chlorophyll data available\n")
return(NULL)
}
# Load larval data
larval_data <- read_csv(larval_file, show_col_types = FALSE)
# Match by station ID (exact match)
matched_ctd <- larval_data %>%
select(larval_source, cruise, latitude, longitude, station,
scientific_name, larvae_count, larvae_100m3) %>%
left_join(
ctd_chl %>% select(Sta_ID, Depthm, T_degC, Salnty, ChlorA, Chlqua, Phaeop, Phaqua),
by = c("station" = "Sta_ID"),
relationship = "many-to-many"
) %>%
filter(!is.na(Depthm)) %>%
rename(
ctd_depth = Depthm,
ctd_temp = T_degC,
ctd_salinity = Salnty,
ctd_chlorophyll = ChlorA,
ctd_chl_quality = Chlqua,
ctd_phaeopigments = Phaeop,
ctd_phae_quality = Phaqua
)
cat("✓ Matched", nrow(matched_ctd), "larval-CTD records\n")
# Summary of CTD chlorophyll data availability
if ("ctd_chlorophyll" %in% names(matched_ctd)) {
chl_available <- sum(!is.na(matched_ctd$ctd_chlorophyll))
cat("CTD chlorophyll available for", chl_available, "records\n")
if (chl_available > 0) {
chl_summary <- matched_ctd %>%
filter(!is.na(ctd_chlorophyll)) %>%
summarise(
min_chl = min(ctd_chlorophyll, na.rm = TRUE),
max_chl = max(ctd_chlorophyll, na.rm = TRUE),
mean_chl = mean(ctd_chlorophyll, na.rm = TRUE),
n_depths = n_distinct(ctd_depth),
depth_range = paste(min(ctd_depth, na.rm = TRUE), "-", max(ctd_depth, na.rm = TRUE), "m")
)
cat("CTD Chlorophyll summary:\n")
cat("  Range:", round(chl_summary$min_chl, 3), "to", round(chl_summary$max_chl, 3), "\n")
cat("  Mean:", round(chl_summary$mean_chl, 3), "\n")
cat("  Depth range:", chl_summary$depth_range, "\n")
cat("  Unique depths:", chl_summary$n_depths, "\n")
}
}
return(matched_ctd)
}
# Function to combine CTD and ROMS chlorophyll data
combine_ctd_roms_chlorophyll <- function(matched_ctd, roms_file = "calcofi_larval_chlorophyll_3d.csv") {
cat("\n--- Combining CTD and ROMS Chlorophyll Data ---\n")
if (is.null(matched_ctd)) {
cat("✗ No matched CTD data available\n")
return(NULL)
}
if (!file.exists(roms_file)) {
cat("✗ ROMS chlorophyll file not found:", roms_file, "\n")
return(NULL)
}
# Load ROMS data
roms_data <- read_csv(roms_file, show_col_types = FALSE)
# Match CTD and ROMS data by location and approximate depth
# Use a depth tolerance for matching
depth_tolerance <- 10  # meters
combined_data <- matched_ctd %>%
left_join(
roms_data %>%
select(latitude, longitude, depth, chlorophyll_mg_m3) %>%
rename(roms_depth = depth, roms_chlorophyll = chlorophyll_mg_m3),
by = c("latitude", "longitude"),
relationship = "many-to-many"
) %>%
# Filter for similar depths (within tolerance)
filter(abs(ctd_depth - roms_depth) <= depth_tolerance) %>%
# Calculate differences between CTD and ROMS
mutate(
# Check if both values are available
both_available = !is.na(ctd_chlorophyll) & !is.na(roms_chlorophyll),
# Calculate absolute difference
chl_difference = case_when(
both_available ~ ctd_chlorophyll - roms_chlorophyll,
TRUE ~ NA_real_
),
# Calculate relative difference (%)
chl_relative_diff = case_when(
both_available & roms_chlorophyll != 0 ~
(ctd_chlorophyll - roms_chlorophyll) / roms_chlorophyll * 100,
TRUE ~ NA_real_
),
# Depth matching quality
depth_diff = abs(ctd_depth - roms_depth),
depth_match_quality = case_when(
depth_diff <= 2 ~ "excellent",
depth_diff <= 5 ~ "good",
depth_diff <= 10 ~ "fair",
TRUE ~ "poor"
)
) %>%
arrange(cruise, latitude, longitude, ctd_depth)
cat("✓ Combined CTD and ROMS data:", nrow(combined_data), "records\n")
# Summary of comparisons
comparison_summary <- combined_data %>%
filter(both_available) %>%
summarise(
n_comparisons = n(),
mean_ctd_chl = mean(ctd_chlorophyll, na.rm = TRUE),
mean_roms_chl = mean(roms_chlorophyll, na.rm = TRUE),
mean_abs_diff = mean(abs(chl_difference), na.rm = TRUE),
mean_rel_diff = mean(abs(chl_relative_diff), na.rm = TRUE),
correlation = cor(ctd_chlorophyll, roms_chlorophyll, use = "complete.obs")
)
if (nrow(combined_data %>% filter(both_available)) > 0) {
cat("\nCTD vs ROMS Chlorophyll Comparison:\n")
cat("  Available comparisons:", comparison_summary$n_comparisons, "\n")
cat("  Mean CTD Chl-a:", round(comparison_summary$mean_ctd_chl, 3), "\n")
cat("  Mean ROMS Chl-a:", round(comparison_summary$mean_roms_chl, 3), "\n")
cat("  Mean absolute difference:", round(comparison_summary$mean_abs_diff, 3), "\n")
cat("  Mean relative difference:", round(comparison_summary$mean_rel_diff, 1), "%\n")
if (!is.na(comparison_summary$correlation)) {
cat("  Correlation:", round(comparison_summary$correlation, 3), "\n")
}
} else {
cat("⚠️  No overlapping CTD and ROMS chlorophyll data found\n")
}
return(combined_data)
}
# Main execution function
main_ctd_chlorophyll_extraction <- function() {
cat("Starting CTD chlorophyll-a extraction and comparison...\n\n")
# Examine data structure
structure_info <- examine_ctd_data_structure()
# Extract CTD chlorophyll data
ctd_chl <- extract_ctd_chlorophyll()
# Match with larval locations
matched_ctd <- match_ctd_with_larval_locations(ctd_chl)
# Combine with ROMS data
combined_data <- combine_ctd_roms_chlorophyll(matched_ctd)
if (!is.null(combined_data)) {
# Save combined dataset
output_file <- "calcofi_ctd_roms_chlorophyll_combined.csv"
write_csv(combined_data, output_file)
cat("✓ Saved combined CTD-ROMS chlorophyll data:", output_file, "\n")
# Create summary by depth zones
depth_zone_summary <- combined_data %>%
mutate(
depth_zone = case_when(
ctd_depth <= 10 ~ "Surface (0-10m)",
ctd_depth <= 50 ~ "Subsurface (10-50m)",
ctd_depth <= 100 ~ "Intermediate (50-100m)",
TRUE ~ "Deep (>100m)"
)
) %>%
group_by(depth_zone) %>%
summarise(
n_records = n(),
n_ctd_chl = sum(!is.na(ctd_chlorophyll)),
n_roms_chl = sum(!is.na(roms_chlorophyll)),
n_both = sum(both_available),
mean_ctd_chl = mean(ctd_chlorophyll, na.rm = TRUE),
mean_roms_chl = mean(roms_chlorophyll, na.rm = TRUE),
mean_difference = mean(chl_difference, na.rm = TRUE),
.groups = 'drop'
)
cat("\nChlorophyll data by depth zone:\n")
print(depth_zone_summary)
summary_file <- "ctd_roms_chlorophyll_summary.csv"
write_csv(depth_zone_summary, summary_file)
cat("✓ Saved depth zone summary:", summary_file, "\n")
}
cat("\n--- Data Quality Notes ---\n")
cat("• CTD ChlorA values are likely fluorescence-derived chlorophyll-a estimates\n")
cat("• ROMS values are model-based chlorophyll-a estimates\n")
cat("• Both should be in comparable units (mg/m³) but may have different accuracies\n")
cat("• Large differences may indicate model limitations or measurement uncertainties\n")
return(list(
structure_info = structure_info,
ctd_data = ctd_chl,
matched_data = matched_ctd,
combined_data = combined_data
))
}
# Execute
if (interactive() || !exists("skip_main_execution")) {
ctd_results <- main_ctd_chlorophyll_extraction()
cat("\n🧪 CTD chlorophyll-a extraction completed!\n")
}
